import{g as n,f as s,G as a}from"./common-bec3f312.js";const t='{"title":"不使用原生的Number和parseInt实现StringToNumber","frontmatter":{"date":"2020-06-27","title":"不使用原生的Number和parseInt实现StringToNumber","tags":[2020,"js进阶"],"describe":"巧用Array.reduce实现string to number"},"relativePath":"docs/string-to-number.md","lastUpdated":1639997448529.306}';var p={};const o=a('<div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">StringToNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">let</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">let</span> sign <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>sign <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> sign <span class="token operator">*</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">total<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">(</span>\n        total <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token punctuation">(</span>cur <span class="token operator">&gt;=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">&amp;&amp;</span> cur <span class="token operator">&lt;=</span> <span class="token string">&#39;9&#39;</span> <span class="token operator">?</span> <span class="token punctuation">(</span>cur <span class="token operator">-</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">NaN</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',1);p.render=function(a,t,p,e,c,r){return s(),n("div",null,[o])};export default p;export{t as __pageData};
